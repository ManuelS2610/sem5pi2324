@startuml
'https://plantuml.com/class-diagram
class ElevatorRoute {
  +/elevators
  +createElevator(req: Request, res: Response, next: NextFunction)
}
class IElevatorController {
  +createElevator(req: Request, res: Response, next: NextFunction)
}
class ElevatorController {
  -elevatorServiceInstance: IElevatorService
  +createElevator(req: Request, res: Response, next: NextFunction)

}
class IElevatorService {
  +createElevator(elevatorDTO: IElevatorDTO): Promise<Result<IElevatorDTO>>
}
class ElevatorService {
  -elevatorRepo: IElevatorRepo
  -floorRepo: IFloorRepo
  -buildingRepo: IBuildingRepo
  +createElevator(elevatorDTO: IElevatorDTO): Promise<Result<IElevatorDTO>>
}
class IElevatorRepo {
  +save(elevator: Elevator): Promise<Elevator>
  +findByDomainID(elevatorId: ElevatorId | string): Promise<Elevator>
  +checkIfBuildingHasElevator(buildingName: string): Promise<boolean>
  +listByBuildingName(buildingName: string): Promise<Array<Elevator>>
}
class ElevatorRepo {
  -elevatorSchema: Model<IElevatorPersistence & Document>
  -buildingSchema: Model<IBuildingPersistence & Document>
  -floorSchema: Model<IFloorPersistence & Document>
  +exists(elevator: Elevator): Promise<boolean>
  +save(elevator: Elevator): Promise<Elevator>
  +findByDomainID(elevatorId: string | ElevatorId): Promise<Elevator>
  +listByBuildingName(buildingName: string): Promise<Array<Elevator>>
  +checkIfBuildingHasElevator(buildingName: string): Promise<boolean>
}
class ElevatorMap {
  +toDTO(elevator: Elevator): IElevatorDTO
  +toDomain(elevator: any | Model<IElevatorPersistence & Document>): Elevator
  +toPersistence(elevator: Elevator): any
}
class IElevatorPersistence {
  +domainId: string
  +buildingName: string
  +floor: string[]
  +position: number[]
}
class ElevatorSchema {
}
class Elevator {
  -_id: UniqueEntityID
  -props: ElevatorProps
  +id: UniqueEntityID
  +buildingName: string
  +elevatorId: ElevatorId
  +floors: string[]
  +position: number[]
  +floors: string[]
  +buildingName: string
  +position: number[]
  -constructor(props: ElevatorProps, id?: UniqueEntityID)
  +create(elevatorDTO: IElevatorDTO, id?: UniqueEntityID): Result<Elevator>
}
class IElevatorDTO {
  +id: string
  +buildingName: string
  +floors: string[]
  +position: number[]
}

ElevatorRoute --|> IElevatorController
IElevatorController --|> ElevatorController
ElevatorController --|> IElevatorService
IElevatorService --|> ElevatorService
ElevatorService --|> Elevator
Elevator --|> ElevatorService
ElevatorService --|> IElevatorRepo
IElevatorRepo --|> ElevatorRepo
ElevatorRepo --|> ElevatorMap
ElevatorMap --|> IElevatorPersistence
IElevatorRepo --|> IElevatorDTO

@enduml
